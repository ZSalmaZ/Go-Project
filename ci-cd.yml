name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build & Test
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: secret
          POSTGRES_DB: bookstore
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready -U postgres
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.20

      - name: Install dependencies
        run: go mod tidy

      - name: Run tests
        env:
          DATABASE_URL: "postgres://postgres:secret@localhost:5432/bookstore?sslmode=disable"
        run: go test ./...

  docker:
    name: Build & Push Docker Image
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker Image
        run: |
          docker build -t bookstore-api .
          docker tag bookstore-api ${{ secrets.DOCKER_USERNAME }}/bookstore-api:latest

      - name: Push Docker Image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/bookstore-api:latest

  deploy:
    name: Deploy to Server
    needs: docker
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to Server
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            docker pull ${{ secrets.DOCKER_USERNAME }}/bookstore-api:latest
            docker stop bookstore-api || true
            docker rm bookstore-api || true
            docker run -d --name bookstore-api -p 8080:8080 --env-file .env ${{ secrets.DOCKER_USERNAME }}/bookstore-api:latest
