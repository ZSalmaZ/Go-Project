CURL COMMANDS:


===================================================================
to login : 

curl -X POST "http://localhost:8080/login" -H "Content-Type: application/json" -d '{"username":"admin","password":"password"}'



===================================================================



Authors:

create an author
curl -X POST http://localhost:8080/authors -H "Content-Type: application/json" -d "{\"first_name\":\"F. Scott\",\"last_name\":\"Fitzgerald\",\"bio\":\"American novelist.\"}"

get all authors:
curl -X GET http://localhost:8080/authors


get author with specific id (here 1)
curl -X GET http://localhost:8080/authors/1

update author with id:
curl -X PUT http://localhost:8080/authors/1 -H "Content-Type: application/json" -d "{\"first_name\":\"F. Scott\",\"last_name\":\"Fitzgerald\",\"bio\":\"Updated bio.\"}"

delete author
curl -X DELETE http://localhost:8080/authors/1


search author (by first name)
curl -X GET "http://localhost:8080/authors?first_name=F.%20Scott"


===================================================================

Books:


create a book:
curl -X POST http://localhost:8080/books -H "Content-Type: application/json" -d "{\"title\":\"The Great Gatsby\",\"author\":{\"id\":1},\"genres\":[\"Classic\",\"Fiction\"],\"published_at\":\"1925-04-10T00:00:00Z\",\"price\":10.99,\"stock\":20}"


get all books:
curl -X GET http://localhost:8080/books


get book with specific id:
curl -X GET http://localhost:8080/books/1


update book with specific id:
curl -X PUT http://localhost:8080/books/1 -H "Content-Type: application/json" -d "{\"title\":\"The Great Gatsby Updated\",\"author\":{\"id\":1},\"genres\":[\"Classic\",\"Fiction\"],\"published_at\":\"1925-04-10T00:00:00Z\",\"price\":12.99,\"stock\":15}"

(make sure to have author with the same id here!)


delete book with id 1
curl -X DELETE http://localhost:8080/books/1

search book by title
curl -X GET "http://localhost:8080/books?title=Gatsby"

===================================================================


Customers:


create customer:
curl -X POST http://localhost:8080/customers -H "Content-Type: application/json" -d "{\"name\":\"John Doe\",\"email\":\"sososo@example.com\",\"street\":\"123 Main St\",\"city\":\"Anytown\",\"state\":\"CA\",\"postal_code\":\"12345\",\"country\":\"USA\"}"

get all customers
curl -X GET http://localhost:8080/customers

get customer with specific id:
curl -X GET http://localhost:8080/customers/7

update a customer: 
curl -X PUT http://localhost:8080/customers/9 -H "Content-Type: application/json" -d "{\"name\":\"John Doe\",\"email\":\"john.new@example.com\",\"street\":\"123 Main St\",\"city\":\"Anytown\",\"state\":\"CA\",\"postal_code\":\"12345\",\"country\":\"USA\"}"

delete customer: 
curl -X DELETE http://localhost:8080/customers/1


search customers by name
curl -X GET "http://localhost:8080/customers?name=John"

===================================================================


Orders:


create an order
curl -X POST http://localhost:8080/orders -H "Content-Type: application/json" -d "{\"customer\":{\"id\":1},\"total_price\":59.97,\"status\":\"pending\",\"items\":[{\"book\":{\"id\":1},\"quantity\":3}]}"


get all orders
curl -X GET http://localhost:8080/orders


get an order with a specific id
curl -X GET http://localhost:8080/orders/1


update an order
curl -X PUT http://localhost:8080/orders/3 -H "Content-Type: application/json" -d "{\"customer\":{\"id\":1},\"total_price\":79.97,\"status\":\"confirmed\",\"items\":[{\"book\":{\"id\":1},\"quantity\":4}]}"

delete an order
curl -X DELETE http://localhost:8080/orders/1

search order by status and customer:
curl -X GET "http://localhost:8080/orders?customer_name=John&status=pending"

===================================================================


Reports:
curl -X GET "http://localhost:8080/reports?start_date=2025-01-01&end_date=2025-04-30"

===================================================================
the routes are to be updated to include the login token


===================================================================
Rate limiting : in ratelimiter.go in auth directory, we set limit to 10 requests per minute.


to test it : 


# Store your authentication token
$token = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImFkbWluIiwiZXhwIjoxNzQxMTExOTY3LCJpYXQiOjE3NDExMDgzNjd9.X8kKBfA6Fv-0vesrddcIAax8GtrrhEmiSAScyiH0oFk"

# Run multiple requests with authentication
for ($i=1; $i -le 15; $i++) {
    try {
        # Send request with authentication token
        $response = Invoke-WebRequest -Uri "http://localhost:8080/api/books" -Method GET -Headers @{ "Authorization" = "Bearer $token" }

        # Extract status code
        $statusCode = $response.StatusCode
        Write-Host ("Request " + $i + ": " + $statusCode)

        # ✅ Print the response body when status is 200
        if ($statusCode -eq 200) {
            Write-Host "Response: " + $response.Content
        }

    } catch {
        # Handle errors (e.g., rate limiting)
        $errorStatus = $.Exception.Response.StatusCode.Value_
        Write-Host ("Request " + $i + ": Failed with status " + $errorStatus)
    }

    Start-Sleep -Seconds 2
}
===================================================================


Prometheus for monitoring and logging : 





download packages: 


go get github.com/prometheus/client_golang/prometheus
go get github.com/prometheus/client_golang/prometheus/promhttp


if you send requests you'll get in your terminal reports of the format: 

(base) PS C:\Users\HP\Desktop\CS\Go_Fati\Go-Project> go run main.go
2025/03/04 18:04:14 Server running on http://localhost:8080
2025/03/04 18:04:21 [GET] /metrics [::1]:58459 1.1378ms
2025/03/04 18:04:34 [GET] /api/books [::1]:58467 95.1076ms
2025/03/04 18:04:36 [GET] /metrics [::1]:58459 554.2µs
2025/03/04 18:04:37 [GET] /api/books [::1]:58467 3.0549ms

===================================================================


